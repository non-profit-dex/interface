{"version":3,"sources":["pages/AnalyticsPage/AnalyticsPairs.tsx"],"names":["useStyles","makeStyles","palette","breakpoints","tokensFilter","cursor","display","panel","background","grey","A700","borderRadius","padding","down","AnalyticsPairs","classes","useState","topPairs","updateTopPairs","useEffect","fetchTopPairs","a","getEthPrice","newPrice","getTopPairs","pairs","formattedPairs","map","pair","id","getBulkPairData","pairData","width","mb","mt","className","data","variant","height"],"mappings":"8OAOMA,EAAYC,aAAW,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,YAAZ,MAA+B,CAC1DC,aAAc,CACZC,OAAQ,UACRC,QAAS,QAEXC,MAAM,aACJC,WAAYN,EAAQO,KAAKC,KACzBC,aAAc,GACdC,QAAS,IACRT,EAAYU,KAAK,MAAQ,CACxBD,QAAS,SAyCAE,UApCkB,WAC/B,IAAMC,EAAUf,IAChB,EAAmCgB,mBAAuB,MAA1D,mBAAOC,EAAP,KAAiBC,EAAjB,KAoBA,OAlBAC,qBAAU,WACR,IAAMC,EAAa,uCAAG,sCAAAC,EAAA,6DACpBH,EAAe,MADK,SAEKI,cAFL,0CAEbC,EAFa,cAGAC,YAAY,KAHZ,cAGdC,EAHc,OAIdC,EAAiBD,EACnBA,EAAME,KAAI,SAACC,GACT,OAAOA,EAAKC,MAEd,GARgB,UASGC,YAAgBJ,EAAgBH,GATnC,SASdQ,EATc,SAWlBb,EAAea,GAXG,4CAAH,qDAcnBX,MACC,CAACF,IAGF,eAAC,IAAD,CAAKc,MAAM,OAAOC,GAAI,EAAtB,UACE,cAAC,IAAD,wBACA,cAAC,IAAD,CAAKC,GAAI,EAAGC,UAAWpB,EAAQR,MAA/B,SACGU,EACC,cAAC,IAAD,CAAWmB,KAAMnB,IAEjB,cAAC,IAAD,CAAUoB,QAAQ,OAAOL,MAAM,OAAOM,OAAQ","file":"static/js/11.745f4a38.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { PairTable } from 'components';\r\nimport { getEthPrice, getTopPairs, getBulkPairData } from 'utils';\r\nimport { Skeleton } from '@material-ui/lab';\r\n\r\nconst useStyles = makeStyles(({ palette, breakpoints }) => ({\r\n  tokensFilter: {\r\n    cursor: 'pointer',\r\n    display: 'flex',\r\n  },\r\n  panel: {\r\n    background: palette.grey.A700,\r\n    borderRadius: 20,\r\n    padding: 24,\r\n    [breakpoints.down('xs')]: {\r\n      padding: 12,\r\n    },\r\n  },\r\n}));\r\n\r\nconst AnalyticsPairs: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [topPairs, updateTopPairs] = useState<any[] | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchTopPairs = async () => {\r\n      updateTopPairs(null);\r\n      const [newPrice] = await getEthPrice();\r\n      const pairs = await getTopPairs(500);\r\n      const formattedPairs = pairs\r\n        ? pairs.map((pair: any) => {\r\n            return pair.id;\r\n          })\r\n        : [];\r\n      const pairData = await getBulkPairData(formattedPairs, newPrice);\r\n      if (pairData) {\r\n        updateTopPairs(pairData);\r\n      }\r\n    };\r\n    fetchTopPairs();\r\n  }, [updateTopPairs]);\r\n\r\n  return (\r\n    <Box width='100%' mb={3}>\r\n      <Typography>All Pairs</Typography>\r\n      <Box mt={4} className={classes.panel}>\r\n        {topPairs ? (\r\n          <PairTable data={topPairs} />\r\n        ) : (\r\n          <Skeleton variant='rect' width='100%' height={150} />\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AnalyticsPairs;\r\n"],"sourceRoot":""}