{"version":3,"sources":["components/Search/index.tsx","pages/AnalyticsPage/AnalyticsHeader.tsx","../node_modules/@material-ui/icons/esm/ArrowForwardIos.js","pages/AnalyticsPairDetails/AnalyticsPairChart.tsx","pages/AnalyticsPairDetails/AnalyticsPairDetails.tsx"],"names":["useStyles","makeStyles","palette","searchInput","display","alignItems","padding","background","grey","A700","height","borderRadius","margin","border","outline","fontSize","fontWeight","minWidth","color","text","primary","searchContent","position","width","zIndex","overflowY","Search","classes","history","useHistory","useState","searchVal","setSearchVal","menuOpen","setMenuOpen","menuRef","useRef","wrapperRef","searchedTokens","setSearchedTokens","searchedPairs","setSearchedPairs","tokensShown","setTokensShown","pairsShown","setPairsShown","allTokens","setAllTokens","allPairs","setAllPairs","escapeRegExp","str","replace","filteredTokens","useMemo","tokens","concat","filter","searchedToken","included","map","token","id","GlobalConst","blacklists","TOKEN_BLACKLIST","includes","Object","keys","tokenEntryKey","isAddress","slice","match","RegExp","some","m","filteredPairs","pairs","searchedPair","pair","PAIR_BLACKLIST","pairA","split","toUpperCase","pairB","token0","symbol","token1","field","name","useEffect","a","getAllTokensOnUniswap","getAllPairsOnUniswap","fetchAllData","length","client","query","TOKEN_SEARCH","variables","value","PAIR_SEARCH","data","asSymbol","t","as0","as1","asAddress","foundTokens","asName","console","log","fetchData","handleClick","e","current","contains","target","document","addEventListener","removeEventListener","Box","className","placeholder","ref","onFocus","onChange","evt","SearchIcon","Typography","variant","val","ind","currency0","Token","ChainId","MATIC","getAddress","decimals","currency1","mt","style","cursor","onClick","push","size","marginLeft","currency","marginTop","React","memo","topTab","disabled","selectedTab","secondary","light","link","textDecoration","AnalyticsHeader","type","useTheme","pathname","useLocation","mb","justifyContent","flexWrap","marginY","hint","ArrowForwardIos","shortenAddress","cx","indexOf","createSvgIcon","d","priceChangeWrapper","AnalyticsPairChart","pairData","pairAddress","useRouteMatch","params","pairChartData","setPairChartData","analyticChart","ONE_MONTH_CHART","durationIndex","setDurationIndex","usingUtVolume","oneDayVolumeUSD","oneDayVolumeUntracked","fees","Number","utils","FEEPERCENT","toLocaleString","chartIndex","setChartIndex","chartIndexes","chartIndexTexts","chartData","item","dailyVolumeUSD","reserveUSD","currentData","trackedReserveUSD","currentPercent","volumeChangeUSD","liquidityChangeUSD","volumeChangeUntracked","getPairChartData","ALL_CHART","getChartStartTime","newChartData","getLimitedData","CHART_COUNT","fetchPairChartData","currentPercentColor","getPriceColor","formatCompact","ml","bgcolor","bgColor","textColor","getFormattedPrice","moment","format","Skeleton","flexDirection","chartTypes","typeTexts","chartType","setChartType","GlobalData","analytics","CHART_DURATIONS","CHART_DURATION_TEXTS","yAxisValues","getYAXISValuesAnalytics","dates","date","add","unix","categories","getChartDates","breakpoints","panel","down","heading1","lineHeight","heading2","button","filledButton","AnalyticsPairDetails","isMobile","useMediaQuery","setPairData","pairTransactions","setPairTransactions","pairTransactionsList","mints","swaps","burns","chainId","useActiveWeb3React","undefined","token0Rate","reserve0","reserve1","toFixed","token1Rate","getEthPrice","newPrice","getBulkPairData","pairInfo","getPairTransactions","transactions","checkEthPrice","fetchTransctions","to","paddingY","paddingX","my","mr","main","Grid","container","xs","sm","md","A400","oneWeekVolumeUSD","href","getEtherscanLink","rel"],"mappings":"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","file":"static/js/8.d6d698f8.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef, useMemo } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport { ReactComponent as SearchIcon } from 'assets/images/SearchIcon.svg';\r\nimport { client } from 'apollo/client';\r\nimport { TOKEN_SEARCH, PAIR_SEARCH } from 'apollo/queries';\r\nimport { getAllTokensOnUniswap, getAllPairsOnUniswap } from 'utils';\r\nimport { GlobalConst } from 'constants/index';\r\nimport { CurrencyLogo, DoubleCurrencyLogo } from 'components';\r\nimport { ChainId, Token } from '@uniswap/sdk';\r\nimport { getAddress } from '@ethersproject/address';\r\n\r\nconst useStyles = makeStyles(({ palette }) => ({\r\n  searchInput: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '0 16px',\r\n    background: palette.grey.A700,\r\n    height: 46,\r\n    borderRadius: 10,\r\n    margin: '12px 0',\r\n    '& input': {\r\n      background: 'transparent',\r\n      border: 'none',\r\n      outline: 'none',\r\n      fontSize: 15,\r\n      fontWeight: 500,\r\n      minWidth: 240,\r\n      color: palette.text.primary,\r\n    },\r\n  },\r\n  searchContent: {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    background: palette.grey.A700,\r\n    borderRadius: 10,\r\n    padding: 12,\r\n    zIndex: 2,\r\n    height: 300,\r\n    overflowY: 'auto',\r\n  },\r\n}));\r\n\r\nconst Search: React.FC = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [searchVal, setSearchVal] = useState('');\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const menuRef = useRef<any>(null);\r\n  const wrapperRef = useRef<any>(null);\r\n  const [searchedTokens, setSearchedTokens] = useState<any[]>([]);\r\n  const [searchedPairs, setSearchedPairs] = useState<any[]>([]);\r\n  const [tokensShown, setTokensShown] = useState(3);\r\n  const [pairsShown, setPairsShown] = useState(3);\r\n  const [allTokens, setAllTokens] = useState<any[]>([]);\r\n  const [allPairs, setAllPairs] = useState<any[]>([]);\r\n\r\n  const escapeRegExp = (str: string) => {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n  };\r\n\r\n  const filteredTokens = useMemo(() => {\r\n    const tokens = allTokens.concat(\r\n      searchedTokens.filter((searchedToken) => {\r\n        let included = false;\r\n        allTokens.map((token) => {\r\n          if (token.id === searchedToken.id) {\r\n            included = true;\r\n          }\r\n          return true;\r\n        });\r\n        return !included;\r\n      }),\r\n    );\r\n    const filtered = tokens\r\n      ? tokens.filter((token) => {\r\n          if (GlobalConst.blacklists.TOKEN_BLACKLIST.includes(token.id)) {\r\n            return false;\r\n          }\r\n          const regexMatches = Object.keys(token).map((tokenEntryKey) => {\r\n            const isAddress = searchVal.slice(0, 2) === '0x';\r\n            if (tokenEntryKey === 'id' && isAddress) {\r\n              return token[tokenEntryKey].match(\r\n                new RegExp(escapeRegExp(searchVal), 'i'),\r\n              );\r\n            }\r\n            if (tokenEntryKey === 'symbol' && !isAddress) {\r\n              return token[tokenEntryKey].match(\r\n                new RegExp(escapeRegExp(searchVal), 'i'),\r\n              );\r\n            }\r\n            if (tokenEntryKey === 'name' && !isAddress) {\r\n              return token[tokenEntryKey].match(\r\n                new RegExp(escapeRegExp(searchVal), 'i'),\r\n              );\r\n            }\r\n            return false;\r\n          });\r\n          return regexMatches.some((m) => m);\r\n        })\r\n      : [];\r\n    return filtered;\r\n  }, [allTokens, searchedTokens, searchVal]);\r\n\r\n  const filteredPairs = useMemo(() => {\r\n    const pairs = allPairs.concat(\r\n      searchedPairs.filter((searchedPair) => {\r\n        let included = false;\r\n        allPairs.map((pair) => {\r\n          if (pair.id === searchedPair.id) {\r\n            included = true;\r\n          }\r\n          return true;\r\n        });\r\n        return !included;\r\n      }),\r\n    );\r\n    const filtered = pairs\r\n      ? pairs.filter((pair) => {\r\n          if (GlobalConst.blacklists.PAIR_BLACKLIST.includes(pair.id)) {\r\n            return false;\r\n          }\r\n          if (searchVal && searchVal.includes(' ')) {\r\n            const pairA = searchVal.split(' ')[0]?.toUpperCase();\r\n            const pairB = searchVal.split(' ')[1]?.toUpperCase();\r\n            return (\r\n              (pair.token0.symbol.includes(pairA) ||\r\n                pair.token0.symbol.includes(pairB)) &&\r\n              (pair.token1.symbol.includes(pairA) ||\r\n                pair.token1.symbol.includes(pairB))\r\n            );\r\n          }\r\n          if (searchVal && searchVal.includes('-')) {\r\n            const pairA = searchVal.split('-')[0]?.toUpperCase();\r\n            const pairB = searchVal.split('-')[1]?.toUpperCase();\r\n            return (\r\n              (pair.token0.symbol.includes(pairA) ||\r\n                pair.token0.symbol.includes(pairB)) &&\r\n              (pair.token1.symbol.includes(pairA) ||\r\n                pair.token1.symbol.includes(pairB))\r\n            );\r\n          }\r\n          const regexMatches = Object.keys(pair).map((field) => {\r\n            const isAddress = searchVal.slice(0, 2) === '0x';\r\n            if (field === 'id' && isAddress) {\r\n              return pair[field].match(\r\n                new RegExp(escapeRegExp(searchVal), 'i'),\r\n              );\r\n            }\r\n            if (field === 'token0') {\r\n              return (\r\n                pair[field].symbol.match(\r\n                  new RegExp(escapeRegExp(searchVal), 'i'),\r\n                ) ||\r\n                pair[field].name.match(new RegExp(escapeRegExp(searchVal), 'i'))\r\n              );\r\n            }\r\n            if (field === 'token1') {\r\n              return (\r\n                pair[field].symbol.match(\r\n                  new RegExp(escapeRegExp(searchVal), 'i'),\r\n                ) ||\r\n                pair[field].name.match(new RegExp(escapeRegExp(searchVal), 'i'))\r\n              );\r\n            }\r\n            return false;\r\n          });\r\n          return regexMatches.some((m) => m);\r\n        })\r\n      : [];\r\n    return filtered;\r\n  }, [allPairs, searchedPairs, searchVal]);\r\n\r\n  useEffect(() => {\r\n    async function fetchAllData() {\r\n      const tokens = await getAllTokensOnUniswap();\r\n      const pairs = await getAllPairsOnUniswap();\r\n      if (tokens) {\r\n        setAllTokens(tokens);\r\n      }\r\n      if (pairs) {\r\n        setAllPairs(pairs);\r\n      }\r\n    }\r\n    fetchAllData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        if (searchVal.length > 0) {\r\n          const tokens = await client.query({\r\n            query: TOKEN_SEARCH,\r\n            variables: {\r\n              value: searchVal ? searchVal.toUpperCase() : '',\r\n              id: searchVal,\r\n            },\r\n          });\r\n\r\n          const pairs = await client.query({\r\n            query: PAIR_SEARCH,\r\n            variables: {\r\n              tokens: tokens.data.asSymbol?.map((t: any) => t.id),\r\n              id: searchVal,\r\n            },\r\n          });\r\n\r\n          setSearchedPairs(\r\n            pairs.data.as0.concat(pairs.data.as1).concat(pairs.data.asAddress),\r\n          );\r\n          const foundTokens = tokens.data.asSymbol\r\n            .concat(tokens.data.asAddress)\r\n            .concat(tokens.data.asName);\r\n          setSearchedTokens(foundTokens);\r\n        }\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [searchVal]);\r\n\r\n  const handleClick = (e: any) => {\r\n    if (\r\n      !(menuRef.current && menuRef.current.contains(e.target)) &&\r\n      !(wrapperRef.current && wrapperRef.current.contains(e.target))\r\n    ) {\r\n      setPairsShown(3);\r\n      setTokensShown(3);\r\n      setMenuOpen(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClick);\r\n    return () => {\r\n      document.removeEventListener('click', handleClick);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Box position='relative'>\r\n      <Box className={classes.searchInput}>\r\n        <input\r\n          placeholder='Search for tokens, pairs, etc…'\r\n          value={searchVal}\r\n          ref={menuRef}\r\n          onFocus={() => setMenuOpen(true)}\r\n          onChange={(evt) => setSearchVal(evt.target.value)}\r\n        />\r\n        <Box display='flex'>\r\n          <SearchIcon />\r\n        </Box>\r\n      </Box>\r\n      {menuOpen && (\r\n        <div ref={wrapperRef} className={classes.searchContent}>\r\n          <Typography variant='body1'>Pairs</Typography>\r\n          {filteredPairs.slice(0, pairsShown).map((val, ind) => {\r\n            const currency0 = new Token(\r\n              ChainId.MATIC,\r\n              getAddress(val.token0.id),\r\n              val.token0.decimals,\r\n            );\r\n            const currency1 = new Token(\r\n              ChainId.MATIC,\r\n              getAddress(val.token1.id),\r\n              val.token1.decimals,\r\n            );\r\n            return (\r\n              <Box\r\n                mt={1}\r\n                key={ind}\r\n                display='flex'\r\n                alignItems='center'\r\n                style={{ cursor: 'pointer' }}\r\n                onClick={() => history.push(`/analytics/pair/${val.id}`)}\r\n              >\r\n                <DoubleCurrencyLogo\r\n                  currency0={currency0}\r\n                  currency1={currency1}\r\n                  size={28}\r\n                />\r\n                <Typography variant='body2' style={{ marginLeft: 8 }}>\r\n                  {val.token0.symbol} - {val.token1.symbol} Pair\r\n                </Typography>\r\n              </Box>\r\n            );\r\n          })}\r\n          <Typography\r\n            variant='body2'\r\n            style={{ cursor: 'pointer', margin: '8px 0' }}\r\n            onClick={() => setPairsShown(pairsShown + 5)}\r\n          >\r\n            Show More\r\n          </Typography>\r\n          <Typography variant='body1'>Tokens</Typography>\r\n          {filteredTokens.slice(0, tokensShown).map((val, ind) => {\r\n            const currency = new Token(\r\n              ChainId.MATIC,\r\n              getAddress(val.id),\r\n              val.decimals,\r\n            );\r\n            return (\r\n              <Box\r\n                mt={1}\r\n                key={ind}\r\n                display='flex'\r\n                alignItems='center'\r\n                style={{ cursor: 'pointer' }}\r\n                onClick={() => history.push(`/analytics/token/${val.id}`)}\r\n              >\r\n                <CurrencyLogo currency={currency} size='28px' />\r\n                <Typography variant='body2' style={{ marginLeft: 8 }}>\r\n                  {val.name} {val.symbol}\r\n                </Typography>\r\n              </Box>\r\n            );\r\n          })}\r\n          <Typography\r\n            variant='body2'\r\n            style={{ cursor: 'pointer', marginTop: 8 }}\r\n            onClick={() => setTokensShown(tokensShown + 5)}\r\n          >\r\n            Show More\r\n          </Typography>\r\n        </div>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(Search);\r\n","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport { ArrowForwardIos } from '@material-ui/icons';\r\nimport cx from 'classnames';\r\nimport Search from 'components/Search';\r\nimport { shortenAddress } from 'utils';\r\n\r\nconst useStyles = makeStyles(({ palette }) => ({\r\n  topTab: {\r\n    height: 46,\r\n    padding: '0 24px',\r\n    borderRadius: 10,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    cursor: 'pointer',\r\n    '& p': {\r\n      color: palette.text.disabled,\r\n    },\r\n  },\r\n  selectedTab: {\r\n    background: palette.secondary.light,\r\n    '& p': {\r\n      color: palette.text.primary,\r\n    },\r\n  },\r\n  link: {\r\n    cursor: 'pointer',\r\n    color: palette.text.secondary,\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n}));\r\n\r\ninterface AnalyticHeaderProps {\r\n  data?: any;\r\n  type?: string;\r\n}\r\n\r\nconst AnalyticsHeader: React.FC<AnalyticHeaderProps> = ({ data, type }) => {\r\n  const classes = useStyles();\r\n  const { palette } = useTheme();\r\n  const history = useHistory();\r\n  const { pathname } = useLocation();\r\n\r\n  return (\r\n    <Box width='100%' mb={3}>\r\n      <Box mb={4}>\r\n        <Typography variant='h4'>Quickswap Analytics</Typography>\r\n      </Box>\r\n      <Box\r\n        mb={4}\r\n        position='relative'\r\n        display='flex'\r\n        justifyContent='space-between'\r\n        flexWrap='wrap'\r\n      >\r\n        <Box marginY={1.5} display='flex' alignItems='center'>\r\n          {type && data && (\r\n            <Box display='flex' alignItems='center' color={palette.text.hint}>\r\n              <Typography\r\n                variant='caption'\r\n                className={classes.link}\r\n                onClick={() => {\r\n                  history.push('/analytics');\r\n                }}\r\n              >\r\n                Analytics\r\n              </Typography>\r\n              <ArrowForwardIos style={{ width: 16 }} />\r\n              <Typography\r\n                variant='caption'\r\n                className={classes.link}\r\n                onClick={() => {\r\n                  history.push(\r\n                    `/analytics?tabIndex=${type === 'token' ? 1 : 2}`,\r\n                  );\r\n                }}\r\n              >\r\n                {type === 'token' ? 'Tokens' : 'Pairs'}\r\n              </Typography>\r\n              <ArrowForwardIos style={{ width: 16 }} />\r\n              <Typography variant='caption'>\r\n                <span style={{ color: '#b6b9cc' }}>\r\n                  {type === 'token'\r\n                    ? data.symbol\r\n                    : `${data.token0.symbol}/${data.token1.symbol}`}\r\n                </span>\r\n                ({shortenAddress(data.id)})\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n          {!type && (\r\n            <>\r\n              <Box\r\n                className={cx(\r\n                  classes.topTab,\r\n                  pathname.indexOf('pair') === -1 &&\r\n                    pathname.indexOf('token') === -1 &&\r\n                    classes.selectedTab,\r\n                )}\r\n                onClick={() => history.push(`/analytics`)}\r\n              >\r\n                <Typography variant='body1'>Overview</Typography>\r\n              </Box>\r\n              <Box\r\n                className={cx(\r\n                  classes.topTab,\r\n                  pathname.indexOf('token') > -1 && classes.selectedTab,\r\n                )}\r\n                onClick={() => history.push(`/analytics/tokens`)}\r\n              >\r\n                <Typography variant='body1'>Tokens</Typography>\r\n              </Box>\r\n              <Box\r\n                className={cx(\r\n                  classes.topTab,\r\n                  pathname.indexOf('pair') > -1 && classes.selectedTab,\r\n                )}\r\n                onClick={() => history.push(`/analytics/pairs`)}\r\n              >\r\n                <Typography variant='body1'>Pairs</Typography>\r\n              </Box>\r\n            </>\r\n          )}\r\n        </Box>\r\n\r\n        <Search />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AnalyticsHeader;\r\n","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M5.88 4.12L13.76 12l-7.88 7.88L8 22l10-10L8 2z\"\n}), 'ArrowForwardIos');","import React, { useState, useEffect, useMemo } from 'react';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { Skeleton } from '@material-ui/lab';\r\nimport moment from 'moment';\r\nimport {\r\n  formatCompact,\r\n  getPairChartData,\r\n  getFormattedPrice,\r\n  getPriceColor,\r\n  getChartDates,\r\n  getChartStartTime,\r\n  getLimitedData,\r\n  getYAXISValuesAnalytics,\r\n} from 'utils';\r\nimport { AreaChart, ChartType } from 'components';\r\nimport { GlobalConst, GlobalData } from 'constants/index';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  priceChangeWrapper: {\r\n    height: 25,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderRadius: 16,\r\n    padding: '0 8px',\r\n  },\r\n}));\r\n\r\nconst CHART_VOLUME = 0;\r\nconst CHART_LIQUIDITY = 1;\r\nconst CHART_FEES = 2;\r\n\r\nconst AnalyticsPairChart: React.FC<{ pairData: any }> = ({ pairData }) => {\r\n  const classes = useStyles();\r\n  const { palette } = useTheme();\r\n  const match = useRouteMatch<{ id: string }>();\r\n  const pairAddress = match.params.id;\r\n  const [pairChartData, setPairChartData] = useState<any[] | null>(null);\r\n  const [durationIndex, setDurationIndex] = useState(\r\n    GlobalConst.analyticChart.ONE_MONTH_CHART,\r\n  );\r\n\r\n  const usingUtVolume =\r\n    pairData &&\r\n    pairData.oneDayVolumeUSD === 0 &&\r\n    !!pairData.oneDayVolumeUntracked;\r\n  const fees =\r\n    pairData && (pairData.oneDayVolumeUSD || pairData.oneDayVolumeUSD === 0)\r\n      ? usingUtVolume\r\n        ? (\r\n            Number(pairData.oneDayVolumeUntracked) *\r\n            GlobalConst.utils.FEEPERCENT\r\n          ).toLocaleString()\r\n        : (\r\n            Number(pairData.oneDayVolumeUSD) * GlobalConst.utils.FEEPERCENT\r\n          ).toLocaleString()\r\n      : '-';\r\n  const [chartIndex, setChartIndex] = useState(CHART_VOLUME);\r\n  const chartIndexes = [CHART_VOLUME, CHART_LIQUIDITY, CHART_FEES];\r\n  const chartIndexTexts = ['Volume', 'Liquidity', 'Fees'];\r\n\r\n  const chartData = useMemo(() => {\r\n    if (!pairChartData) return;\r\n    return pairChartData.map((item: any) => {\r\n      switch (chartIndex) {\r\n        case CHART_VOLUME:\r\n          return Number(item.dailyVolumeUSD);\r\n        case CHART_LIQUIDITY:\r\n          return Number(item.reserveUSD);\r\n        case CHART_FEES:\r\n          return Number(item.dailyVolumeUSD) * GlobalConst.utils.FEEPERCENT;\r\n        default:\r\n          return;\r\n      }\r\n    });\r\n  }, [pairChartData, chartIndex]);\r\n\r\n  const currentData = useMemo(() => {\r\n    if (!pairData) return;\r\n    switch (chartIndex) {\r\n      case CHART_VOLUME:\r\n        return pairData.oneDayVolumeUSD;\r\n      case CHART_LIQUIDITY:\r\n        return pairData.reserveUSD ?? pairData.trackedReserveUSD;\r\n      case CHART_FEES:\r\n        return fees;\r\n      default:\r\n        return;\r\n    }\r\n  }, [pairData, chartIndex, fees]);\r\n\r\n  const currentPercent = useMemo(() => {\r\n    if (!pairData) return;\r\n    switch (chartIndex) {\r\n      case CHART_VOLUME:\r\n        return pairData.volumeChangeUSD;\r\n      case CHART_LIQUIDITY:\r\n        return pairData.liquidityChangeUSD;\r\n      case CHART_FEES:\r\n        return usingUtVolume\r\n          ? pairData.volumeChangeUntracked\r\n          : pairData.volumeChangeUSD;\r\n      default:\r\n        return;\r\n    }\r\n  }, [pairData, chartIndex, usingUtVolume]);\r\n\r\n  useEffect(() => {\r\n    async function fetchPairChartData() {\r\n      setPairChartData(null);\r\n      const chartData = await getPairChartData(\r\n        pairAddress,\r\n        durationIndex === GlobalConst.analyticChart.ALL_CHART\r\n          ? 0\r\n          : getChartStartTime(durationIndex),\r\n      );\r\n      if (chartData && chartData.length > 0) {\r\n        const newChartData = getLimitedData(\r\n          chartData,\r\n          GlobalConst.analyticChart.CHART_COUNT,\r\n        );\r\n        setPairChartData(newChartData);\r\n      }\r\n    }\r\n    fetchPairChartData();\r\n  }, [pairAddress, durationIndex]);\r\n\r\n  const currentPercentColor = getPriceColor(Number(currentPercent), palette);\r\n\r\n  return (\r\n    <>\r\n      <Box display='flex' flexWrap='wrap' justifyContent='space-between'>\r\n        <Box mt={1.5}>\r\n          <Typography variant='caption'>\r\n            {chartIndexTexts[chartIndex]}\r\n          </Typography>\r\n          <Box mt={1}>\r\n            {currentPercent && currentData ? (\r\n              <>\r\n                <Box display='flex' alignItems='center'>\r\n                  <Typography\r\n                    variant='h4'\r\n                    style={{ color: palette.text.primary }}\r\n                  >\r\n                    $\r\n                    {currentData > 100000\r\n                      ? formatCompact(currentData)\r\n                      : currentData.toLocaleString()}\r\n                  </Typography>\r\n                  <Box\r\n                    className={classes.priceChangeWrapper}\r\n                    ml={1}\r\n                    bgcolor={currentPercentColor.bgColor}\r\n                    color={currentPercentColor.textColor}\r\n                  >\r\n                    <Typography variant='body2'>\r\n                      {getFormattedPrice(Number(currentPercent))}%\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n                <Box>\r\n                  <Typography variant='caption'>\r\n                    {moment().format('MMM DD, YYYY')}\r\n                  </Typography>\r\n                </Box>\r\n              </>\r\n            ) : (\r\n              <Skeleton variant='rect' width='120px' height='30px' />\r\n            )}\r\n          </Box>\r\n        </Box>\r\n        <Box display='flex' flexDirection='column' alignItems='flex-end'>\r\n          <Box mt={1.5}>\r\n            <ChartType\r\n              chartTypes={chartIndexes}\r\n              typeTexts={chartIndexTexts}\r\n              chartType={chartIndex}\r\n              setChartType={setChartIndex}\r\n            />\r\n          </Box>\r\n          <Box mt={1.5}>\r\n            <ChartType\r\n              chartTypes={GlobalData.analytics.CHART_DURATIONS}\r\n              typeTexts={GlobalData.analytics.CHART_DURATION_TEXTS}\r\n              chartType={durationIndex}\r\n              setChartType={setDurationIndex}\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Box mt={2} width={1}>\r\n        {chartData && pairChartData ? (\r\n          <AreaChart\r\n            data={chartData}\r\n            yAxisValues={getYAXISValuesAnalytics(chartData)}\r\n            dates={pairChartData.map((value: any) =>\r\n              moment(value.date * 1000)\r\n                .add(1, 'day')\r\n                .unix(),\r\n            )}\r\n            width='100%'\r\n            height={240}\r\n            categories={getChartDates(pairChartData, durationIndex)}\r\n          />\r\n        ) : (\r\n          <Skeleton variant='rect' width='100%' height={217} />\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnalyticsPairChart;\r\n","import React, { useState, useEffect, useMemo } from 'react';\r\nimport { useHistory, useRouteMatch, Link } from 'react-router-dom';\r\nimport { Box, Typography, Grid, useMediaQuery } from '@material-ui/core';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { Skeleton } from '@material-ui/lab';\r\nimport { ChainId, Token } from '@uniswap/sdk';\r\nimport cx from 'classnames';\r\nimport {\r\n  shortenAddress,\r\n  getEtherscanLink,\r\n  getPairTransactions,\r\n  getEthPrice,\r\n  getBulkPairData,\r\n} from 'utils';\r\nimport { useActiveWeb3React } from 'hooks';\r\nimport {\r\n  CurrencyLogo,\r\n  DoubleCurrencyLogo,\r\n  TransactionsTable,\r\n} from 'components';\r\nimport { getAddress } from '@ethersproject/address';\r\nimport { GlobalConst } from 'constants/index';\r\nimport AnalyticsHeader from 'pages/AnalyticsPage/AnalyticsHeader';\r\nimport AnalyticsPairChart from './AnalyticsPairChart';\r\n\r\nconst useStyles = makeStyles(({ palette, breakpoints }) => ({\r\n  panel: {\r\n    background: palette.grey.A700,\r\n    borderRadius: 20,\r\n    padding: 24,\r\n    [breakpoints.down('xs')]: {\r\n      padding: 12,\r\n    },\r\n  },\r\n  heading1: {\r\n    fontSize: 32,\r\n    fontWeight: 'bold',\r\n    color: palette.text.primary,\r\n    lineHeight: 1,\r\n    [breakpoints.down('xs')]: {\r\n      fontSize: 22,\r\n      fontWeight: 600,\r\n    },\r\n  },\r\n  heading2: {\r\n    fontSize: 32,\r\n    lineHeight: 1.2,\r\n    fontWeight: 600,\r\n    color: palette.text.primary,\r\n    marginLeft: 6,\r\n    [breakpoints.down('xs')]: {\r\n      fontSize: 18,\r\n    },\r\n    '& a': {\r\n      color: palette.text.primary,\r\n      textDecoration: 'none',\r\n    },\r\n  },\r\n  priceChangeWrapper: {\r\n    height: 25,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderRadius: 16,\r\n    padding: '0 8px',\r\n  },\r\n  button: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    height: 40,\r\n    padding: '0 28px',\r\n    borderRadius: 10,\r\n    color: palette.text.primary,\r\n    cursor: 'pointer',\r\n  },\r\n  filledButton: {\r\n    background: 'linear-gradient(279deg, rgb(0, 76, 230), rgb(61, 113, 255))',\r\n  },\r\n}));\r\n\r\nconst AnalyticsPairDetails: React.FC = () => {\r\n  const classes = useStyles();\r\n  const { palette, breakpoints } = useTheme();\r\n  const isMobile = useMediaQuery(breakpoints.down('xs'));\r\n  const history = useHistory();\r\n  const match = useRouteMatch<{ id: string }>();\r\n  const pairAddress = match.params.id;\r\n  const [pairData, setPairData] = useState<any>(null);\r\n  const [pairTransactions, setPairTransactions] = useState<any>(null);\r\n  const pairTransactionsList = useMemo(() => {\r\n    if (pairTransactions) {\r\n      const mints = pairTransactions.mints.map((item: any) => {\r\n        return { ...item, type: 'Add' };\r\n      });\r\n      const swaps = pairTransactions.mints.map((item: any) => {\r\n        return { ...item, type: 'Swap' };\r\n      });\r\n      const burns = pairTransactions.mints.map((item: any) => {\r\n        return { ...item, type: 'Remove' };\r\n      });\r\n      return mints.concat(swaps).concat(burns);\r\n    } else {\r\n      return null;\r\n    }\r\n  }, [pairTransactions]);\r\n  const { chainId } = useActiveWeb3React();\r\n  const currency0 = pairData\r\n    ? new Token(\r\n        ChainId.MATIC,\r\n        getAddress(pairData.token0.id),\r\n        pairData.token0.decimals,\r\n      )\r\n    : undefined;\r\n  const currency1 = pairData\r\n    ? new Token(\r\n        ChainId.MATIC,\r\n        getAddress(pairData.token1.id),\r\n        pairData.token1.decimals,\r\n      )\r\n    : undefined;\r\n\r\n  const token0Rate =\r\n    pairData && pairData.reserve0 && pairData.reserve1\r\n      ? Number(pairData.reserve1) / Number(pairData.reserve0) >= 0.0001\r\n        ? (Number(pairData.reserve1) / Number(pairData.reserve0)).toFixed(\r\n            Number(pairData.reserve1) / Number(pairData.reserve0) > 1 ? 2 : 4,\r\n          )\r\n        : '< 0.0001'\r\n      : '-';\r\n  const token1Rate =\r\n    pairData && pairData.reserve0 && pairData.reserve1\r\n      ? Number(pairData.reserve0) / Number(pairData.reserve1) >= 0.0001\r\n        ? (Number(pairData.reserve0) / Number(pairData.reserve1)).toFixed(\r\n            Number(pairData.reserve0) / Number(pairData.reserve1) > 1 ? 2 : 4,\r\n          )\r\n        : '< 0.0001'\r\n      : '-';\r\n  const usingUtVolume =\r\n    pairData &&\r\n    pairData.oneDayVolumeUSD === 0 &&\r\n    !!pairData.oneDayVolumeUntracked;\r\n  const fees =\r\n    pairData && (pairData.oneDayVolumeUSD || pairData.oneDayVolumeUSD === 0)\r\n      ? usingUtVolume\r\n        ? (\r\n            Number(pairData.oneDayVolumeUntracked) *\r\n            GlobalConst.utils.FEEPERCENT\r\n          ).toLocaleString()\r\n        : (\r\n            Number(pairData.oneDayVolumeUSD) * GlobalConst.utils.FEEPERCENT\r\n          ).toLocaleString()\r\n      : '-';\r\n\r\n  useEffect(() => {\r\n    async function checkEthPrice() {\r\n      const [newPrice] = await getEthPrice();\r\n      const pairInfo = await getBulkPairData([pairAddress], newPrice);\r\n      if (pairInfo && pairInfo.length > 0) {\r\n        setPairData(pairInfo[0]);\r\n      }\r\n    }\r\n    async function fetchTransctions() {\r\n      const transactions = await getPairTransactions(pairAddress);\r\n      if (transactions) {\r\n        setPairTransactions(transactions);\r\n      }\r\n    }\r\n    checkEthPrice();\r\n    fetchTransctions();\r\n  }, [pairAddress]);\r\n\r\n  return (\r\n    <>\r\n      <AnalyticsHeader type='pair' data={pairData} />\r\n      {pairData ? (\r\n        <>\r\n          <Box\r\n            width={1}\r\n            display='flex'\r\n            flexWrap='wrap'\r\n            justifyContent='space-between'\r\n          >\r\n            <Box>\r\n              <Box display='flex' alignItems='center'>\r\n                <DoubleCurrencyLogo\r\n                  currency0={currency0}\r\n                  currency1={currency1}\r\n                  size={32}\r\n                />\r\n                <Box ml={1}>\r\n                  <Typography className={classes.heading2}>\r\n                    <Link to={`/analytics/token/${pairData.token0.id}`}>\r\n                      {pairData.token0.symbol}\r\n                    </Link>{' '}\r\n                    /{' '}\r\n                    <Link to={`/analytics/token/${pairData.token1.id}`}>\r\n                      {pairData.token1.symbol}\r\n                    </Link>\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n              <Box mt={2} display='flex'>\r\n                <Box\r\n                  paddingY={0.75}\r\n                  paddingX={1.5}\r\n                  borderRadius={20}\r\n                  display='flex'\r\n                  alignItems='center'\r\n                  bgcolor={palette.grey.A700}\r\n                >\r\n                  <CurrencyLogo currency={currency0} size='16px' />\r\n                  <Typography\r\n                    variant='body2'\r\n                    color='textPrimary'\r\n                    style={{ marginLeft: 6 }}\r\n                  >\r\n                    1 {pairData.token0.symbol} = {token0Rate}{' '}\r\n                    {pairData.token1.symbol}\r\n                  </Typography>\r\n                </Box>\r\n                <Box\r\n                  padding={0.75}\r\n                  paddingX={1.5}\r\n                  ml={2}\r\n                  borderRadius={20}\r\n                  display='flex'\r\n                  alignItems='center'\r\n                  bgcolor={palette.grey.A700}\r\n                >\r\n                  <CurrencyLogo currency={currency1} size='16px' />\r\n                  <Typography\r\n                    variant='body2'\r\n                    color='textPrimary'\r\n                    style={{ marginLeft: 6 }}\r\n                  >\r\n                    1 {pairData.token1.symbol} = {token1Rate}{' '}\r\n                    {pairData.token0.symbol}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n            <Box my={2} display='flex'>\r\n              <Box\r\n                className={classes.button}\r\n                mr={1.5}\r\n                border={`1px solid ${palette.primary.main}`}\r\n                onClick={() => {\r\n                  history.push(\r\n                    `/pools?currency0=${pairData.token0.id}&currency1=${pairData.token1.id}`,\r\n                  );\r\n                }}\r\n              >\r\n                <Typography variant='body2'>Add Liquidity</Typography>\r\n              </Box>\r\n              <Box\r\n                className={cx(classes.button, classes.filledButton)}\r\n                onClick={() => {\r\n                  history.push(\r\n                    `/swap?currency0=${pairData.token0.id}&currency1=${pairData.token1.id}`,\r\n                  );\r\n                }}\r\n              >\r\n                <Typography variant='body2'>Swap</Typography>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n          <Box width={1} className={classes.panel} mt={4}>\r\n            <Grid container>\r\n              <Grid item xs={12} sm={12} md={6}>\r\n                <AnalyticsPairChart pairData={pairData} />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={6}>\r\n                <Box\r\n                  my={2}\r\n                  height={1}\r\n                  display='flex'\r\n                  justifyContent='center'\r\n                  alignItems='center'\r\n                >\r\n                  <Box\r\n                    width={isMobile ? 1 : 0.8}\r\n                    display='flex'\r\n                    justifyContent='space-between'\r\n                  >\r\n                    <Box width={212}>\r\n                      <Box>\r\n                        <Typography\r\n                          variant='caption'\r\n                          style={{ color: palette.text.disabled }}\r\n                        >\r\n                          TOTAL TOKENS LOCKED\r\n                        </Typography>\r\n                        <Box\r\n                          mt={1.5}\r\n                          bgcolor={palette.grey.A400}\r\n                          borderRadius={8}\r\n                          padding={1.5}\r\n                        >\r\n                          <Box\r\n                            display='flex'\r\n                            alignItems='center'\r\n                            justifyContent='space-between'\r\n                          >\r\n                            <Box display='flex' alignItems='center'>\r\n                              <CurrencyLogo currency={currency0} size='16px' />\r\n                              <Typography\r\n                                variant='caption'\r\n                                color='textPrimary'\r\n                                style={{ marginLeft: 6 }}\r\n                              >\r\n                                {pairData.token0.symbol} :\r\n                              </Typography>\r\n                            </Box>\r\n                            <Typography variant='caption' color='textPrimary'>\r\n                              {Number(pairData.reserve0).toLocaleString()}\r\n                            </Typography>\r\n                          </Box>\r\n                          <Box\r\n                            mt={1}\r\n                            display='flex'\r\n                            alignItems='center'\r\n                            justifyContent='space-between'\r\n                          >\r\n                            <Box display='flex' alignItems='center'>\r\n                              <CurrencyLogo currency={currency1} size='16px' />\r\n                              <Typography\r\n                                variant='caption'\r\n                                color='textPrimary'\r\n                                style={{ marginLeft: 6 }}\r\n                              >\r\n                                {pairData.token1.symbol} :\r\n                              </Typography>\r\n                            </Box>\r\n                            <Typography variant='caption' color='textPrimary'>\r\n                              {Number(pairData.reserve1).toLocaleString()}\r\n                            </Typography>\r\n                          </Box>\r\n                        </Box>\r\n                      </Box>\r\n                      <Box mt={4}>\r\n                        <Typography\r\n                          variant='caption'\r\n                          style={{ color: palette.text.disabled }}\r\n                        >\r\n                          7d Trading Vol\r\n                        </Typography>\r\n                        <Typography variant={isMobile ? 'body1' : 'h5'}>\r\n                          ${pairData.oneWeekVolumeUSD.toLocaleString()}\r\n                        </Typography>\r\n                      </Box>\r\n                      <Box mt={4}>\r\n                        <Typography\r\n                          variant='caption'\r\n                          style={{ color: palette.text.disabled }}\r\n                        >\r\n                          24h FEES\r\n                        </Typography>\r\n                        <Typography variant={isMobile ? 'body1' : 'h5'}>\r\n                          ${fees}\r\n                        </Typography>\r\n                      </Box>\r\n                    </Box>\r\n                    <Box width={140}>\r\n                      <Typography\r\n                        variant='caption'\r\n                        style={{ color: palette.text.disabled }}\r\n                      >\r\n                        TOTAL LIQUIDITY\r\n                      </Typography>\r\n                      <Typography variant={isMobile ? 'body1' : 'h5'}>\r\n                        $\r\n                        {Number(\r\n                          pairData.reserveUSD\r\n                            ? pairData.reserveUSD\r\n                            : pairData.trackedReserveUSD,\r\n                        ).toLocaleString()}\r\n                      </Typography>\r\n                      <Box mt={4}>\r\n                        <Typography\r\n                          variant='caption'\r\n                          style={{ color: palette.text.disabled }}\r\n                        >\r\n                          24h Trading Vol\r\n                        </Typography>\r\n                        <Typography variant={isMobile ? 'body1' : 'h5'}>\r\n                          ${pairData.oneDayVolumeUSD.toLocaleString()}\r\n                        </Typography>\r\n                      </Box>\r\n                      <Box mt={4}>\r\n                        <Typography\r\n                          variant='caption'\r\n                          style={{ color: palette.text.disabled }}\r\n                        >\r\n                          Contract Address\r\n                        </Typography>\r\n                        <Typography\r\n                          variant='h5'\r\n                          style={{ color: palette.primary.main }}\r\n                        >\r\n                          {chainId ? (\r\n                            <a\r\n                              href={getEtherscanLink(\r\n                                chainId,\r\n                                pairData.id,\r\n                                'address',\r\n                              )}\r\n                              target='_blank'\r\n                              rel='noreferrer'\r\n                              style={{\r\n                                color: palette.primary.main,\r\n                                textDecoration: 'none',\r\n                              }}\r\n                            >\r\n                              {shortenAddress(pairData.id)}\r\n                            </a>\r\n                          ) : (\r\n                            shortenAddress(pairData.id)\r\n                          )}\r\n                        </Typography>\r\n                      </Box>\r\n                    </Box>\r\n                  </Box>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          <Box width={1} mt={5}>\r\n            <Typography variant='body1'>Transactions</Typography>\r\n          </Box>\r\n          <Box width={1} className={classes.panel} mt={4}>\r\n            {pairTransactionsList ? (\r\n              <TransactionsTable data={pairTransactionsList} />\r\n            ) : (\r\n              <Skeleton variant='rect' width='100%' height={150} />\r\n            )}\r\n          </Box>\r\n        </>\r\n      ) : (\r\n        <Skeleton width='100%' height={100} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnalyticsPairDetails;\r\n"],"sourceRoot":""}