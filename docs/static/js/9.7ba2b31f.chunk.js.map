{"version":3,"sources":["components/Search/index.tsx","pages/AnalyticsPage/AnalyticsHeader.tsx","../node_modules/@material-ui/icons/esm/ArrowForwardIos.js","pages/AnalyticsTokenDetails/AnalyticsTokenChart.tsx","pages/AnalyticsTokenDetails/AnalyticsTokenDetails.tsx"],"names":["useStyles","makeStyles","palette","searchInput","display","alignItems","padding","background","grey","A700","height","borderRadius","margin","border","outline","fontSize","fontWeight","minWidth","color","text","primary","searchContent","position","width","zIndex","overflowY","Search","classes","history","useHistory","useState","searchVal","setSearchVal","menuOpen","setMenuOpen","menuRef","useRef","wrapperRef","searchedTokens","setSearchedTokens","searchedPairs","setSearchedPairs","tokensShown","setTokensShown","pairsShown","setPairsShown","allTokens","setAllTokens","allPairs","setAllPairs","escapeRegExp","str","replace","filteredTokens","useMemo","tokens","concat","filter","searchedToken","included","map","token","id","GlobalConst","blacklists","TOKEN_BLACKLIST","includes","Object","keys","tokenEntryKey","isAddress","slice","match","RegExp","some","m","filteredPairs","pairs","searchedPair","pair","PAIR_BLACKLIST","pairA","split","toUpperCase","pairB","token0","symbol","token1","field","name","useEffect","a","getAllTokensOnUniswap","getAllPairsOnUniswap","fetchAllData","length","client","query","TOKEN_SEARCH","variables","value","PAIR_SEARCH","data","asSymbol","t","as0","as1","asAddress","foundTokens","asName","console","log","fetchData","handleClick","e","current","contains","target","document","addEventListener","removeEventListener","Box","className","placeholder","ref","onFocus","onChange","evt","SearchIcon","Typography","variant","val","ind","currency0","Token","ChainId","MATIC","getAddress","decimals","currency1","mt","style","cursor","onClick","push","size","marginLeft","currency","marginTop","React","memo","topTab","disabled","selectedTab","secondary","light","link","textDecoration","AnalyticsHeader","type","useTheme","pathname","useLocation","mb","justifyContent","flexWrap","marginY","hint","ArrowForwardIos","shortenAddress","cx","indexOf","createSvgIcon","d","priceChangeWrapper","AnalyticsTokenChart","tokenAddress","useRouteMatch","params","tokenChartData","updateTokenChartData","chartIndexes","chartIndexTexts","chartIndex","setChartIndex","analyticChart","ONE_MONTH_CHART","durationIndex","setDurationIndex","chartData","item","Number","dailyVolumeUSD","totalLiquidityUSD","priceUSD","currentData","oneDayVolumeUSD","currentPercent","volumeChangeUSD","liquidityChangeUSD","priceChangeUSD","getTokenChartData","ALL_CHART","getChartStartTime","newChartData","getLimitedData","CHART_COUNT","fetchTokenChartData","currentPercentColor","getPriceColor","formatCompact","formatNumber","ml","bgcolor","bgColor","textColor","getFormattedPrice","moment","format","Skeleton","flexDirection","chartTypes","typeTexts","chartType","setChartType","GlobalData","analytics","CHART_DURATIONS","CHART_DURATION_TEXTS","yAxisValues","getYAXISValuesAnalytics","dates","date","add","unix","categories","getChartDates","breakpoints","panel","down","heading1","lineHeight","heading2","button","filledButton","AnalyticsTokenDetails","isMobile","useMediaQuery","setToken","chainId","useActiveWeb3React","undefined","tokenPairs","updateTokenPairs","useBookmarkTokens","bookmarkTokens","addBookmarkToken","removeBookmarkToken","getEthPrice","newPrice","oneDayPrice","getTokenInfo","tokenInfo","fetchTokenInfo","getTokenPairs2","formattedPairs","getBulkPairData","pairData","fetchTokenPairs","tokenPercentColor","mr","StarChecked","StarUnchecked","my","main","Grid","container","xs","sm","md","toLocaleString","oneWeekVolumeUSD","utils","FEEPERCENT","href","getEtherscanLink","rel"],"mappings":"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","file":"static/js/9.7ba2b31f.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef, useMemo } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport { ReactComponent as SearchIcon } from 'assets/images/SearchIcon.svg';\r\nimport { client } from 'apollo/client';\r\nimport { TOKEN_SEARCH, PAIR_SEARCH } from 'apollo/queries';\r\nimport { getAllTokensOnUniswap, getAllPairsOnUniswap } from 'utils';\r\nimport { GlobalConst } from 'constants/index';\r\nimport { CurrencyLogo, DoubleCurrencyLogo } from 'components';\r\nimport { ChainId, Token } from '@uniswap/sdk';\r\nimport { getAddress } from '@ethersproject/address';\r\n\r\nconst useStyles = makeStyles(({ palette }) => ({\r\n  searchInput: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '0 16px',\r\n    background: palette.grey.A700,\r\n    height: 46,\r\n    borderRadius: 10,\r\n    margin: '12px 0',\r\n    '& input': {\r\n      background: 'transparent',\r\n      border: 'none',\r\n      outline: 'none',\r\n      fontSize: 15,\r\n      fontWeight: 500,\r\n      minWidth: 240,\r\n      color: palette.text.primary,\r\n    },\r\n  },\r\n  searchContent: {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    background: palette.grey.A700,\r\n    borderRadius: 10,\r\n    padding: 12,\r\n    zIndex: 2,\r\n    height: 300,\r\n    overflowY: 'auto',\r\n  },\r\n}));\r\n\r\nconst Search: React.FC = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [searchVal, setSearchVal] = useState('');\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const menuRef = useRef<any>(null);\r\n  const wrapperRef = useRef<any>(null);\r\n  const [searchedTokens, setSearchedTokens] = useState<any[]>([]);\r\n  const [searchedPairs, setSearchedPairs] = useState<any[]>([]);\r\n  const [tokensShown, setTokensShown] = useState(3);\r\n  const [pairsShown, setPairsShown] = useState(3);\r\n  const [allTokens, setAllTokens] = useState<any[]>([]);\r\n  const [allPairs, setAllPairs] = useState<any[]>([]);\r\n\r\n  const escapeRegExp = (str: string) => {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n  };\r\n\r\n  const filteredTokens = useMemo(() => {\r\n    const tokens = allTokens.concat(\r\n      searchedTokens.filter((searchedToken) => {\r\n        let included = false;\r\n        allTokens.map((token) => {\r\n          if (token.id === searchedToken.id) {\r\n            included = true;\r\n          }\r\n          return true;\r\n        });\r\n        return !included;\r\n      }),\r\n    );\r\n    const filtered = tokens\r\n      ? tokens.filter((token) => {\r\n          if (GlobalConst.blacklists.TOKEN_BLACKLIST.includes(token.id)) {\r\n            return false;\r\n          }\r\n          const regexMatches = Object.keys(token).map((tokenEntryKey) => {\r\n            const isAddress = searchVal.slice(0, 2) === '0x';\r\n            if (tokenEntryKey === 'id' && isAddress) {\r\n              return token[tokenEntryKey].match(\r\n                new RegExp(escapeRegExp(searchVal), 'i'),\r\n              );\r\n            }\r\n            if (tokenEntryKey === 'symbol' && !isAddress) {\r\n              return token[tokenEntryKey].match(\r\n                new RegExp(escapeRegExp(searchVal), 'i'),\r\n              );\r\n            }\r\n            if (tokenEntryKey === 'name' && !isAddress) {\r\n              return token[tokenEntryKey].match(\r\n                new RegExp(escapeRegExp(searchVal), 'i'),\r\n              );\r\n            }\r\n            return false;\r\n          });\r\n          return regexMatches.some((m) => m);\r\n        })\r\n      : [];\r\n    return filtered;\r\n  }, [allTokens, searchedTokens, searchVal]);\r\n\r\n  const filteredPairs = useMemo(() => {\r\n    const pairs = allPairs.concat(\r\n      searchedPairs.filter((searchedPair) => {\r\n        let included = false;\r\n        allPairs.map((pair) => {\r\n          if (pair.id === searchedPair.id) {\r\n            included = true;\r\n          }\r\n          return true;\r\n        });\r\n        return !included;\r\n      }),\r\n    );\r\n    const filtered = pairs\r\n      ? pairs.filter((pair) => {\r\n          if (GlobalConst.blacklists.PAIR_BLACKLIST.includes(pair.id)) {\r\n            return false;\r\n          }\r\n          if (searchVal && searchVal.includes(' ')) {\r\n            const pairA = searchVal.split(' ')[0]?.toUpperCase();\r\n            const pairB = searchVal.split(' ')[1]?.toUpperCase();\r\n            return (\r\n              (pair.token0.symbol.includes(pairA) ||\r\n                pair.token0.symbol.includes(pairB)) &&\r\n              (pair.token1.symbol.includes(pairA) ||\r\n                pair.token1.symbol.includes(pairB))\r\n            );\r\n          }\r\n          if (searchVal && searchVal.includes('-')) {\r\n            const pairA = searchVal.split('-')[0]?.toUpperCase();\r\n            const pairB = searchVal.split('-')[1]?.toUpperCase();\r\n            return (\r\n              (pair.token0.symbol.includes(pairA) ||\r\n                pair.token0.symbol.includes(pairB)) &&\r\n              (pair.token1.symbol.includes(pairA) ||\r\n                pair.token1.symbol.includes(pairB))\r\n            );\r\n          }\r\n          const regexMatches = Object.keys(pair).map((field) => {\r\n            const isAddress = searchVal.slice(0, 2) === '0x';\r\n            if (field === 'id' && isAddress) {\r\n              return pair[field].match(\r\n                new RegExp(escapeRegExp(searchVal), 'i'),\r\n              );\r\n            }\r\n            if (field === 'token0') {\r\n              return (\r\n                pair[field].symbol.match(\r\n                  new RegExp(escapeRegExp(searchVal), 'i'),\r\n                ) ||\r\n                pair[field].name.match(new RegExp(escapeRegExp(searchVal), 'i'))\r\n              );\r\n            }\r\n            if (field === 'token1') {\r\n              return (\r\n                pair[field].symbol.match(\r\n                  new RegExp(escapeRegExp(searchVal), 'i'),\r\n                ) ||\r\n                pair[field].name.match(new RegExp(escapeRegExp(searchVal), 'i'))\r\n              );\r\n            }\r\n            return false;\r\n          });\r\n          return regexMatches.some((m) => m);\r\n        })\r\n      : [];\r\n    return filtered;\r\n  }, [allPairs, searchedPairs, searchVal]);\r\n\r\n  useEffect(() => {\r\n    async function fetchAllData() {\r\n      const tokens = await getAllTokensOnUniswap();\r\n      const pairs = await getAllPairsOnUniswap();\r\n      if (tokens) {\r\n        setAllTokens(tokens);\r\n      }\r\n      if (pairs) {\r\n        setAllPairs(pairs);\r\n      }\r\n    }\r\n    fetchAllData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        if (searchVal.length > 0) {\r\n          const tokens = await client.query({\r\n            query: TOKEN_SEARCH,\r\n            variables: {\r\n              value: searchVal ? searchVal.toUpperCase() : '',\r\n              id: searchVal,\r\n            },\r\n          });\r\n\r\n          const pairs = await client.query({\r\n            query: PAIR_SEARCH,\r\n            variables: {\r\n              tokens: tokens.data.asSymbol?.map((t: any) => t.id),\r\n              id: searchVal,\r\n            },\r\n          });\r\n\r\n          setSearchedPairs(\r\n            pairs.data.as0.concat(pairs.data.as1).concat(pairs.data.asAddress),\r\n          );\r\n          const foundTokens = tokens.data.asSymbol\r\n            .concat(tokens.data.asAddress)\r\n            .concat(tokens.data.asName);\r\n          setSearchedTokens(foundTokens);\r\n        }\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [searchVal]);\r\n\r\n  const handleClick = (e: any) => {\r\n    if (\r\n      !(menuRef.current && menuRef.current.contains(e.target)) &&\r\n      !(wrapperRef.current && wrapperRef.current.contains(e.target))\r\n    ) {\r\n      setPairsShown(3);\r\n      setTokensShown(3);\r\n      setMenuOpen(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClick);\r\n    return () => {\r\n      document.removeEventListener('click', handleClick);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Box position='relative'>\r\n      <Box className={classes.searchInput}>\r\n        <input\r\n          placeholder='Search for tokens, pairs, etc…'\r\n          value={searchVal}\r\n          ref={menuRef}\r\n          onFocus={() => setMenuOpen(true)}\r\n          onChange={(evt) => setSearchVal(evt.target.value)}\r\n        />\r\n        <Box display='flex'>\r\n          <SearchIcon />\r\n        </Box>\r\n      </Box>\r\n      {menuOpen && (\r\n        <div ref={wrapperRef} className={classes.searchContent}>\r\n          <Typography variant='body1'>Pairs</Typography>\r\n          {filteredPairs.slice(0, pairsShown).map((val, ind) => {\r\n            const currency0 = new Token(\r\n              ChainId.MATIC,\r\n              getAddress(val.token0.id),\r\n              val.token0.decimals,\r\n            );\r\n            const currency1 = new Token(\r\n              ChainId.MATIC,\r\n              getAddress(val.token1.id),\r\n              val.token1.decimals,\r\n            );\r\n            return (\r\n              <Box\r\n                mt={1}\r\n                key={ind}\r\n                display='flex'\r\n                alignItems='center'\r\n                style={{ cursor: 'pointer' }}\r\n                onClick={() => history.push(`/analytics/pair/${val.id}`)}\r\n              >\r\n                <DoubleCurrencyLogo\r\n                  currency0={currency0}\r\n                  currency1={currency1}\r\n                  size={28}\r\n                />\r\n                <Typography variant='body2' style={{ marginLeft: 8 }}>\r\n                  {val.token0.symbol} - {val.token1.symbol} Pair\r\n                </Typography>\r\n              </Box>\r\n            );\r\n          })}\r\n          <Typography\r\n            variant='body2'\r\n            style={{ cursor: 'pointer', margin: '8px 0' }}\r\n            onClick={() => setPairsShown(pairsShown + 5)}\r\n          >\r\n            Show More\r\n          </Typography>\r\n          <Typography variant='body1'>Tokens</Typography>\r\n          {filteredTokens.slice(0, tokensShown).map((val, ind) => {\r\n            const currency = new Token(\r\n              ChainId.MATIC,\r\n              getAddress(val.id),\r\n              val.decimals,\r\n            );\r\n            return (\r\n              <Box\r\n                mt={1}\r\n                key={ind}\r\n                display='flex'\r\n                alignItems='center'\r\n                style={{ cursor: 'pointer' }}\r\n                onClick={() => history.push(`/analytics/token/${val.id}`)}\r\n              >\r\n                <CurrencyLogo currency={currency} size='28px' />\r\n                <Typography variant='body2' style={{ marginLeft: 8 }}>\r\n                  {val.name} {val.symbol}\r\n                </Typography>\r\n              </Box>\r\n            );\r\n          })}\r\n          <Typography\r\n            variant='body2'\r\n            style={{ cursor: 'pointer', marginTop: 8 }}\r\n            onClick={() => setTokensShown(tokensShown + 5)}\r\n          >\r\n            Show More\r\n          </Typography>\r\n        </div>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(Search);\r\n","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport { ArrowForwardIos } from '@material-ui/icons';\r\nimport cx from 'classnames';\r\nimport Search from 'components/Search';\r\nimport { shortenAddress } from 'utils';\r\n\r\nconst useStyles = makeStyles(({ palette }) => ({\r\n  topTab: {\r\n    height: 46,\r\n    padding: '0 24px',\r\n    borderRadius: 10,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    cursor: 'pointer',\r\n    '& p': {\r\n      color: palette.text.disabled,\r\n    },\r\n  },\r\n  selectedTab: {\r\n    background: palette.secondary.light,\r\n    '& p': {\r\n      color: palette.text.primary,\r\n    },\r\n  },\r\n  link: {\r\n    cursor: 'pointer',\r\n    color: palette.text.secondary,\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n}));\r\n\r\ninterface AnalyticHeaderProps {\r\n  data?: any;\r\n  type?: string;\r\n}\r\n\r\nconst AnalyticsHeader: React.FC<AnalyticHeaderProps> = ({ data, type }) => {\r\n  const classes = useStyles();\r\n  const { palette } = useTheme();\r\n  const history = useHistory();\r\n  const { pathname } = useLocation();\r\n\r\n  return (\r\n    <Box width='100%' mb={3}>\r\n      <Box mb={4}>\r\n        <Typography variant='h4'>Quickswap Analytics</Typography>\r\n      </Box>\r\n      <Box\r\n        mb={4}\r\n        position='relative'\r\n        display='flex'\r\n        justifyContent='space-between'\r\n        flexWrap='wrap'\r\n      >\r\n        <Box marginY={1.5} display='flex' alignItems='center'>\r\n          {type && data && (\r\n            <Box display='flex' alignItems='center' color={palette.text.hint}>\r\n              <Typography\r\n                variant='caption'\r\n                className={classes.link}\r\n                onClick={() => {\r\n                  history.push('/analytics');\r\n                }}\r\n              >\r\n                Analytics\r\n              </Typography>\r\n              <ArrowForwardIos style={{ width: 16 }} />\r\n              <Typography\r\n                variant='caption'\r\n                className={classes.link}\r\n                onClick={() => {\r\n                  history.push(\r\n                    `/analytics?tabIndex=${type === 'token' ? 1 : 2}`,\r\n                  );\r\n                }}\r\n              >\r\n                {type === 'token' ? 'Tokens' : 'Pairs'}\r\n              </Typography>\r\n              <ArrowForwardIos style={{ width: 16 }} />\r\n              <Typography variant='caption'>\r\n                <span style={{ color: '#b6b9cc' }}>\r\n                  {type === 'token'\r\n                    ? data.symbol\r\n                    : `${data.token0.symbol}/${data.token1.symbol}`}\r\n                </span>\r\n                ({shortenAddress(data.id)})\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n          {!type && (\r\n            <>\r\n              <Box\r\n                className={cx(\r\n                  classes.topTab,\r\n                  pathname.indexOf('pair') === -1 &&\r\n                    pathname.indexOf('token') === -1 &&\r\n                    classes.selectedTab,\r\n                )}\r\n                onClick={() => history.push(`/analytics`)}\r\n              >\r\n                <Typography variant='body1'>Overview</Typography>\r\n              </Box>\r\n              <Box\r\n                className={cx(\r\n                  classes.topTab,\r\n                  pathname.indexOf('token') > -1 && classes.selectedTab,\r\n                )}\r\n                onClick={() => history.push(`/analytics/tokens`)}\r\n              >\r\n                <Typography variant='body1'>Tokens</Typography>\r\n              </Box>\r\n              <Box\r\n                className={cx(\r\n                  classes.topTab,\r\n                  pathname.indexOf('pair') > -1 && classes.selectedTab,\r\n                )}\r\n                onClick={() => history.push(`/analytics/pairs`)}\r\n              >\r\n                <Typography variant='body1'>Pairs</Typography>\r\n              </Box>\r\n            </>\r\n          )}\r\n        </Box>\r\n\r\n        <Search />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AnalyticsHeader;\r\n","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M5.88 4.12L13.76 12l-7.88 7.88L8 22l10-10L8 2z\"\n}), 'ArrowForwardIos');","import React, { useState, useEffect, useMemo } from 'react';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { Skeleton } from '@material-ui/lab';\r\nimport moment from 'moment';\r\nimport {\r\n  formatCompact,\r\n  getFormattedPrice,\r\n  getPriceColor,\r\n  formatNumber,\r\n  getChartDates,\r\n  getChartStartTime,\r\n  getLimitedData,\r\n  getYAXISValuesAnalytics,\r\n} from 'utils';\r\nimport { AreaChart, ChartType } from 'components';\r\nimport { getTokenChartData } from 'utils';\r\nimport { GlobalConst, GlobalData } from 'constants/index';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  priceChangeWrapper: {\r\n    height: 25,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderRadius: 16,\r\n    padding: '0 8px',\r\n  },\r\n}));\r\n\r\nconst CHART_VOLUME = 0;\r\nconst CHART_LIQUIDITY = 1;\r\nconst CHART_PRICE = 2;\r\n\r\nconst AnalyticsTokenChart: React.FC<{ token: any }> = ({ token }) => {\r\n  const classes = useStyles();\r\n  const { palette } = useTheme();\r\n  const match = useRouteMatch<{ id: string }>();\r\n  const tokenAddress = match.params.id;\r\n  const [tokenChartData, updateTokenChartData] = useState<any>(null);\r\n  const chartIndexes = [CHART_VOLUME, CHART_LIQUIDITY, CHART_PRICE];\r\n  const chartIndexTexts = ['Volume', 'Liquidity', 'Price'];\r\n  const [chartIndex, setChartIndex] = useState(CHART_VOLUME);\r\n  const [durationIndex, setDurationIndex] = useState(\r\n    GlobalConst.analyticChart.ONE_MONTH_CHART,\r\n  );\r\n\r\n  const chartData = useMemo(() => {\r\n    if (!tokenChartData) return;\r\n    return tokenChartData.map((item: any) => {\r\n      switch (chartIndex) {\r\n        case CHART_VOLUME:\r\n          return Number(item.dailyVolumeUSD);\r\n        case CHART_LIQUIDITY:\r\n          return Number(item.totalLiquidityUSD);\r\n        case CHART_PRICE:\r\n          return Number(item.priceUSD);\r\n        default:\r\n          return;\r\n      }\r\n    });\r\n  }, [tokenChartData, chartIndex]);\r\n\r\n  const currentData = useMemo(() => {\r\n    if (!token) return;\r\n    switch (chartIndex) {\r\n      case CHART_VOLUME:\r\n        return token.oneDayVolumeUSD;\r\n      case CHART_LIQUIDITY:\r\n        return token.totalLiquidityUSD;\r\n      case CHART_PRICE:\r\n        return token.priceUSD;\r\n      default:\r\n        return;\r\n    }\r\n  }, [token, chartIndex]);\r\n\r\n  const currentPercent = useMemo(() => {\r\n    if (!token) return;\r\n    switch (chartIndex) {\r\n      case CHART_VOLUME:\r\n        return token.volumeChangeUSD;\r\n      case CHART_LIQUIDITY:\r\n        return token.liquidityChangeUSD;\r\n      case CHART_PRICE:\r\n        return token.priceChangeUSD;\r\n      default:\r\n        return;\r\n    }\r\n  }, [token, chartIndex]);\r\n\r\n  useEffect(() => {\r\n    async function fetchTokenChartData() {\r\n      updateTokenChartData(null);\r\n      const chartData = await getTokenChartData(\r\n        tokenAddress,\r\n        durationIndex === GlobalConst.analyticChart.ALL_CHART\r\n          ? 0\r\n          : getChartStartTime(durationIndex),\r\n      );\r\n      if (chartData) {\r\n        const newChartData = getLimitedData(\r\n          chartData,\r\n          GlobalConst.analyticChart.CHART_COUNT,\r\n        );\r\n        updateTokenChartData(newChartData);\r\n      }\r\n    }\r\n    fetchTokenChartData();\r\n  }, [updateTokenChartData, tokenAddress, durationIndex]);\r\n\r\n  const currentPercentColor = getPriceColor(Number(currentPercent), palette);\r\n\r\n  return (\r\n    <>\r\n      <Box display='flex' flexWrap='wrap' justifyContent='space-between'>\r\n        <Box mt={1.5}>\r\n          <Typography variant='caption'>\r\n            {chartIndexTexts[chartIndex]}\r\n          </Typography>\r\n          <Box mt={1}>\r\n            {currentData && currentPercent ? (\r\n              <>\r\n                <Box display='flex' alignItems='center'>\r\n                  <Typography\r\n                    variant='h4'\r\n                    style={{ color: palette.text.primary }}\r\n                  >\r\n                    $\r\n                    {currentData > 100000\r\n                      ? formatCompact(currentData)\r\n                      : formatNumber(currentData)}\r\n                  </Typography>\r\n                  <Box\r\n                    className={classes.priceChangeWrapper}\r\n                    ml={1}\r\n                    bgcolor={currentPercentColor.bgColor}\r\n                    color={currentPercentColor.textColor}\r\n                  >\r\n                    <Typography variant='body2'>\r\n                      {getFormattedPrice(Number(currentPercent))}%\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n                <Box>\r\n                  <Typography variant='caption'>\r\n                    {moment().format('MMM DD, YYYY')}\r\n                  </Typography>\r\n                </Box>\r\n              </>\r\n            ) : (\r\n              <Skeleton variant='rect' width='120px' height='30px' />\r\n            )}\r\n          </Box>\r\n        </Box>\r\n        <Box display='flex' flexDirection='column' alignItems='flex-end'>\r\n          <Box mt={1.5}>\r\n            <ChartType\r\n              chartTypes={chartIndexes}\r\n              typeTexts={chartIndexTexts}\r\n              chartType={chartIndex}\r\n              setChartType={setChartIndex}\r\n            />\r\n          </Box>\r\n          <Box mt={1.5}>\r\n            <ChartType\r\n              chartTypes={GlobalData.analytics.CHART_DURATIONS}\r\n              typeTexts={GlobalData.analytics.CHART_DURATION_TEXTS}\r\n              chartType={durationIndex}\r\n              setChartType={setDurationIndex}\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Box mt={2} width={1}>\r\n        {tokenChartData ? (\r\n          <AreaChart\r\n            data={chartData}\r\n            yAxisValues={getYAXISValuesAnalytics(chartData)}\r\n            dates={tokenChartData.map((value: any) =>\r\n              moment(value.date * 1000)\r\n                .add(1, 'day')\r\n                .unix(),\r\n            )}\r\n            width='100%'\r\n            height={240}\r\n            categories={getChartDates(tokenChartData, durationIndex)}\r\n          />\r\n        ) : (\r\n          <Skeleton variant='rect' width='100%' height={217} />\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnalyticsTokenChart;\r\n","import React, { useState, useEffect, useMemo } from 'react';\r\nimport { useHistory, useRouteMatch } from 'react-router-dom';\r\nimport { Box, Typography, Grid, useMediaQuery } from '@material-ui/core';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { Skeleton } from '@material-ui/lab';\r\nimport { ChainId, Token } from '@uniswap/sdk';\r\nimport cx from 'classnames';\r\nimport {\r\n  shortenAddress,\r\n  getEtherscanLink,\r\n  getFormattedPrice,\r\n  getPriceColor,\r\n  formatNumber,\r\n} from 'utils';\r\nimport { useActiveWeb3React } from 'hooks';\r\nimport { CurrencyLogo, PairTable } from 'components';\r\nimport { useBookmarkTokens } from 'state/application/hooks';\r\nimport {\r\n  getTokenInfo,\r\n  getEthPrice,\r\n  getTokenPairs2,\r\n  getBulkPairData,\r\n} from 'utils';\r\nimport { ReactComponent as StarChecked } from 'assets/images/StarChecked.svg';\r\nimport { ReactComponent as StarUnchecked } from 'assets/images/StarUnchecked.svg';\r\nimport { getAddress } from '@ethersproject/address';\r\nimport { GlobalConst } from 'constants/index';\r\nimport AnalyticsHeader from 'pages/AnalyticsPage/AnalyticsHeader';\r\nimport AnalyticsTokenChart from './AnalyticsTokenChart';\r\n\r\nconst useStyles = makeStyles(({ palette, breakpoints }) => ({\r\n  panel: {\r\n    background: palette.grey.A700,\r\n    borderRadius: 20,\r\n    padding: 24,\r\n    [breakpoints.down('xs')]: {\r\n      padding: 12,\r\n    },\r\n  },\r\n  heading1: {\r\n    fontSize: 32,\r\n    fontWeight: 'bold',\r\n    color: palette.text.primary,\r\n    lineHeight: 1,\r\n    [breakpoints.down('xs')]: {\r\n      fontSize: 22,\r\n      fontWeight: 600,\r\n    },\r\n  },\r\n  heading2: {\r\n    fontSize: 20,\r\n    lineHeight: 1.2,\r\n    fontWeight: 600,\r\n    color: palette.text.hint,\r\n    marginLeft: 6,\r\n    [breakpoints.down('xs')]: {\r\n      fontSize: 18,\r\n    },\r\n  },\r\n  priceChangeWrapper: {\r\n    height: 25,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderRadius: 16,\r\n    padding: '0 8px',\r\n  },\r\n  button: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    height: 40,\r\n    padding: '0 28px',\r\n    borderRadius: 10,\r\n    color: palette.text.primary,\r\n    cursor: 'pointer',\r\n  },\r\n  filledButton: {\r\n    background: 'linear-gradient(279deg, rgb(0, 76, 230), rgb(61, 113, 255))',\r\n  },\r\n}));\r\n\r\nconst AnalyticsTokenDetails: React.FC = () => {\r\n  const classes = useStyles();\r\n  const { palette, breakpoints } = useTheme();\r\n  const isMobile = useMediaQuery(breakpoints.down('xs'));\r\n  const history = useHistory();\r\n  const match = useRouteMatch<{ id: string }>();\r\n  const tokenAddress = match.params.id;\r\n  const [token, setToken] = useState<any>(null);\r\n  const { chainId } = useActiveWeb3React();\r\n  const currency = token\r\n    ? new Token(ChainId.MATIC, getAddress(token.id), token.decimals)\r\n    : undefined;\r\n  const [tokenPairs, updateTokenPairs] = useState<any>(null);\r\n  const {\r\n    bookmarkTokens,\r\n    addBookmarkToken,\r\n    removeBookmarkToken,\r\n  } = useBookmarkTokens();\r\n\r\n  useEffect(() => {\r\n    async function fetchTokenInfo() {\r\n      const [newPrice, oneDayPrice] = await getEthPrice();\r\n      const tokenInfo = await getTokenInfo(newPrice, oneDayPrice, tokenAddress);\r\n      if (tokenInfo) {\r\n        setToken(tokenInfo[0]);\r\n      }\r\n    }\r\n    fetchTokenInfo();\r\n  }, [tokenAddress]);\r\n\r\n  useEffect(() => {\r\n    async function fetchTokenPairs() {\r\n      const [newPrice] = await getEthPrice();\r\n      const tokenPairs = await getTokenPairs2(tokenAddress);\r\n      const formattedPairs = tokenPairs\r\n        ? tokenPairs.map((pair: any) => {\r\n            return pair.id;\r\n          })\r\n        : [];\r\n      const pairData = await getBulkPairData(formattedPairs, newPrice);\r\n      if (pairData) {\r\n        updateTokenPairs(pairData);\r\n      }\r\n    }\r\n    fetchTokenPairs();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [updateTokenPairs, tokenAddress]);\r\n\r\n  const tokenPercentColor = getPriceColor(\r\n    token ? Number(token.priceChangeUSD) : 0,\r\n    palette,\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <AnalyticsHeader type='token' data={token} />\r\n      {token ? (\r\n        <>\r\n          <Box\r\n            width={1}\r\n            display='flex'\r\n            flexWrap='wrap'\r\n            justifyContent='space-between'\r\n          >\r\n            <Box display='flex'>\r\n              <CurrencyLogo currency={currency} size='32px' />\r\n              <Box ml={1.5}>\r\n                <Box display='flex' alignItems='center'>\r\n                  <Box display='flex' alignItems='flex-end' mr={0.5}>\r\n                    <Typography className={classes.heading1}>\r\n                      {token.name}{' '}\r\n                    </Typography>\r\n                    <Typography className={classes.heading2}>\r\n                      ({token.symbol})\r\n                    </Typography>\r\n                  </Box>\r\n                  {bookmarkTokens.includes(token.id) ? (\r\n                    <StarChecked\r\n                      onClick={() => removeBookmarkToken(token.id)}\r\n                    />\r\n                  ) : (\r\n                    <StarUnchecked onClick={() => addBookmarkToken(token.id)} />\r\n                  )}\r\n                </Box>\r\n                <Box mt={1.25} display='flex' alignItems='center'>\r\n                  <Typography\r\n                    variant='h5'\r\n                    style={{ color: palette.text.primary }}\r\n                  >\r\n                    ${formatNumber(token.priceUSD)}\r\n                  </Typography>\r\n                  <Box\r\n                    className={classes.priceChangeWrapper}\r\n                    ml={2}\r\n                    bgcolor={tokenPercentColor.bgColor}\r\n                    color={tokenPercentColor.textColor}\r\n                  >\r\n                    <Typography variant='body2'>\r\n                      {getFormattedPrice(Number(token.priceChangeUSD))}%\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n            <Box my={2} display='flex'>\r\n              <Box\r\n                className={classes.button}\r\n                mr={1.5}\r\n                border={`1px solid ${palette.primary.main}`}\r\n                onClick={() => {\r\n                  history.push(`/pools?currency0=${token.id}&currency1=ETH`);\r\n                }}\r\n              >\r\n                <Typography variant='body2'>Add Liquidity</Typography>\r\n              </Box>\r\n              <Box\r\n                className={cx(classes.button, classes.filledButton)}\r\n                onClick={() => {\r\n                  history.push(`/swap?currency0=${token.id}&currency1=ETH`);\r\n                }}\r\n              >\r\n                <Typography variant='body2'>Swap</Typography>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n          <Box width={1} className={classes.panel} mt={4}>\r\n            <Grid container>\r\n              <Grid item xs={12} sm={12} md={6}>\r\n                <AnalyticsTokenChart token={token} />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={6}>\r\n                <Box\r\n                  my={2}\r\n                  height={1}\r\n                  display='flex'\r\n                  flexDirection='column'\r\n                  alignItems='center'\r\n                  justifyContent='center'\r\n                >\r\n                  <Box\r\n                    width={isMobile ? 1 : 0.8}\r\n                    display='flex'\r\n                    justifyContent='space-between'\r\n                  >\r\n                    <Box width={180}>\r\n                      <Typography\r\n                        variant='caption'\r\n                        style={{ color: palette.text.disabled }}\r\n                      >\r\n                        TOTAL LIQUIDITY\r\n                      </Typography>\r\n                      <Typography variant={isMobile ? 'body1' : 'h5'}>\r\n                        ${token.totalLiquidityUSD.toLocaleString()}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box width={140}>\r\n                      <Typography\r\n                        variant='caption'\r\n                        style={{ color: palette.text.disabled }}\r\n                      >\r\n                        7d Trading Vol\r\n                      </Typography>\r\n                      <Typography variant={isMobile ? 'body1' : 'h5'}>\r\n                        ${token.oneWeekVolumeUSD.toLocaleString()}\r\n                      </Typography>\r\n                    </Box>\r\n                  </Box>\r\n                  <Box\r\n                    width={isMobile ? 1 : 0.8}\r\n                    mt={4}\r\n                    display='flex'\r\n                    justifyContent='space-between'\r\n                  >\r\n                    <Box width={180}>\r\n                      <Typography\r\n                        variant='caption'\r\n                        style={{ color: palette.text.disabled }}\r\n                      >\r\n                        24h Trading Vol\r\n                      </Typography>\r\n                      <Typography variant={isMobile ? 'body1' : 'h5'}>\r\n                        ${token.oneDayVolumeUSD.toLocaleString()}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box width={140}>\r\n                      <Typography\r\n                        variant='caption'\r\n                        style={{ color: palette.text.disabled }}\r\n                      >\r\n                        24h FEES\r\n                      </Typography>\r\n                      <Typography variant={isMobile ? 'body1' : 'h5'}>\r\n                        $\r\n                        {(\r\n                          token.oneDayVolumeUSD * GlobalConst.utils.FEEPERCENT\r\n                        ).toLocaleString()}\r\n                      </Typography>\r\n                    </Box>\r\n                  </Box>\r\n                  <Box\r\n                    width={isMobile ? 1 : 0.8}\r\n                    mt={4}\r\n                    display='flex'\r\n                    justifyContent='space-between'\r\n                  >\r\n                    <Box width={180}>\r\n                      <Typography\r\n                        variant='caption'\r\n                        style={{ color: palette.text.disabled }}\r\n                      >\r\n                        Contract Address\r\n                      </Typography>\r\n                      <Typography\r\n                        variant='h5'\r\n                        style={{ color: palette.primary.main }}\r\n                      >\r\n                        {chainId ? (\r\n                          <a\r\n                            href={getEtherscanLink(\r\n                              chainId,\r\n                              token.id,\r\n                              'address',\r\n                            )}\r\n                            target='_blank'\r\n                            rel='noreferrer'\r\n                            style={{\r\n                              color: palette.primary.main,\r\n                              textDecoration: 'none',\r\n                            }}\r\n                          >\r\n                            {shortenAddress(token.id)}\r\n                          </a>\r\n                        ) : (\r\n                          shortenAddress(token.id)\r\n                        )}\r\n                      </Typography>\r\n                    </Box>\r\n                  </Box>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          <Box width={1} mt={5}>\r\n            <Typography variant='body1'>{token.symbol} Pools</Typography>\r\n          </Box>\r\n          <Box width={1} className={classes.panel} mt={4}>\r\n            {tokenPairs ? (\r\n              <PairTable data={tokenPairs} />\r\n            ) : (\r\n              <Skeleton variant='rect' width='100%' height={150} />\r\n            )}\r\n          </Box>\r\n        </>\r\n      ) : (\r\n        <Skeleton width='100%' height={100} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnalyticsTokenDetails;\r\n"],"sourceRoot":""}